#!/bin/bash

CONFIG_FILE="$HOME/.uprel_config"

# Cek apakah file konfigurasi sudah ada
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Konfigurasi belum ditemukan. Silakan isi data berikut:"
    read -p "GitHub Token: " TOKEN
    read -p "GitHub Username: " GH_USER
    read -p "Repository Name: " REPO

    # Simpan ke file konfigurasi
    echo "TOKEN=$TOKEN" > "$CONFIG_FILE"
    echo "GH_USER=$GH_USER" >> "$CONFIG_FILE"
    echo "REPO=$REPO" >> "$CONFIG_FILE"

    echo "Konfigurasi tersimpan di $CONFIG_FILE."
else
    # Load konfigurasi
    source "$CONFIG_FILE"
fi

# Fungsi untuk mendapatkan ID Release terbaru
get_release_id() {
    ID_RELEASE=$(curl -s -H "Authorization: token $TOKEN" \
        "https://api.github.com/repos/$GH_USER/$REPO/releases" | jq '.[0].id')

    if [[ "$ID_RELEASE" == "null" || -z "$ID_RELEASE" ]]; then
        echo "Gagal mendapatkan ID Release. Pastikan repo memiliki release!"
        exit 1
    fi

    echo "ID Release terbaru: $ID_RELEASE"
    
    # Simpan ID Release ke konfigurasi
    echo "ID_RELEASE=$ID_RELEASE" >> "$CONFIG_FILE"
}

# Fungsi untuk upload file
upload_file() {
    if [ -z "$ID_RELEASE" ]; then
        echo "ID Release belum diset. Mengambil ID Release terbaru..."
        get_release_id
    fi

    read -p "Masukkan nama file (misal.zip): " FILE_NAME

    curl -X POST \
        -H "Authorization: token $TOKEN" \
        -H "Content-Type: application/zip" \
        --data-binary "@$FILE_NAME" \
        "https://uploads.github.com/repos/$GH_USER/$REPO/releases/$ID_RELEASE/assets?name=$FILE_NAME"

    echo -e "\nUpload selesai!"
}

# Menu utama
while true; do
    clear
    echo "=== MENU ==="
    echo "1. Cek ID Release"
    echo "2. Upload File ke Release"
    echo "3. Keluar"
    read -p "Pilih menu [1-3]: " CHOICE

    case $CHOICE in
        1) get_release_id ;;
        2) upload_file ;;
        3) exit 0 ;;
        *) echo "Pilihan tidak valid!" ;;
    esac

    read -p "Tekan Enter untuk kembali ke menu..."
done